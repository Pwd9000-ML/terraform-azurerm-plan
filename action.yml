name: 'Create a Terraform plan for AZURE' 
description: 'Create a Terraform plan with AzureRM backend and uploads plan as workspace artifact (Used with: `Pwd9000-ML/terraform-azurerm-apply`)'

inputs:
  #path:
  #  description: '(Optional) Specifies the path of the root terraform module.'
  #  required: false
  #  type: string
  #  default: "."

  tf_version:
    description: '(Optional) Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
    required: false
    type: string
    default: latest

  az_resource_group:
    description: '(Required) Specifies the Azure Resource Group where the backend storage account is hosted.'
    required: true
    type: string

  az_storage_acc:
    description: '(Required) Specifies the Azure Storage Account where the backend state is hosted.'
    required: true
    type: string

  az_container_name:
    description: '(Required) Specifies the Azure Storage account container where backend Terraform state is hosted.'
    required: true
    type: string

  tf_key:
    description: '(Required) Specifies the Terraform state file name for this plan.'
    required: true
    type: string

#  gh_environment:
#    description: '(Optional) Specifies the GitHub deployment environment.'
#    required: false
#    type: string
#    default: null

  tf_vars_file:
    description: '(Required) Specifies the Terraform TFVARS file.'
    required: true
    type: string

  enable_TFSEC:
    description: '(Optional) Enables TFSEC IaC scans and code quality checks on Terraform configurations'
    required: false
    type: bool
    default: false

secrets:
  arm_client_id:
    description: 'Specifies the Azure ARM CLIENT ID.'
    required: true

  arm_client_secret:
    description: 'Specifies the Azure ARM CLIENT SECRET.'
    required: true

  arm_subscription_id:
    description: 'Specifies the Azure ARM SUBSCRIPTION ID.'
    required: true

  arm_tenant_id:
    description: 'Specifies the Azure ARM TENANT ID.'
    required: true

# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'upload'
  color: 'blue'

runs:
  using: "composite"

  steps:
    - name: Scan IaC - tfsec
      if: ${{ inputs.enable_TFSEC == true }}
      uses: tfsec/tfsec-sarif-action@v0.0.6
      with:
        sarif_file: tfsec.sarif

    - name: Upload SARIF file
      if: ${{ inputs.enable_TFSEC == true }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: tfsec.sarif

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.3.2
      with:
        terraform_version: ${{ inputs.tf_version }}

    - name: Terraform Format
      shell: bash
      id: fmt
      run: terraform fmt --check

    - name: Terraform Init
      shell: bash
      id: init
      run: terraform init --backend-config="storage_account_name=${{ inputs.az_storage_acc }}" --backend-config="container_name=${{ inputs.az_container_name }}" --backend-config="resource_group_name=${{ inputs.az_resource_group }}" --backend-config="key=${{ inputs.tf_key }}"

    - name: Terraform Validate
      shell: bash
      id: validate
      run: terraform validate

    - name: Terraform Plan
      shell: bash
      id: plan
      run: terraform plan --var-file=${{ inputs.tf_vars_file }} --out=plan.tfplan

    - name: Compress TF Plan artifact
      shell: bash
      run: zip -r ${{ inputs.tf_key }}.zip ./*

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: "${{ inputs.tf_key }}"
        path: "${{ inputs.tf_key }}.zip"
        retention-days: 5